service: unknown-diary-stack

provider:
  name: aws
  runtime: go1.x
  region: ap-northeast-1
  profile: amagai
  stage: ${opt:stage, "dev"}

  environment:
    REGION: ${self:provider.region}
    DIARY_STORE_DYNAMODB_TABLE: ${self:custom.diaryStoreDynamoDBTable}

  iamRoleStatements:
    # DynamoDB へのアクセス許可設定
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - '${self:custom.diaryStoreDynamoDBARN}'
        - '${self:custom.diaryStoreDynamoDBARN}/index/*'

  cloudfrontAmCertificateArn: 'arn:aws:acm:us-east-1:666062638775:certificate/0f0301fb-11c1-41dc-8382-917d5be75fe3'

  cloudfrontAlias: unknown-diary.com

package:
  exclude:
    - ./**
  include:
    - ./bin/**

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  ### ローカル実行のためのカスタム定義
  serverless-offline:
    useDocker: true

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      development:
        sources:
          - table: ${self:custom.diaryStoreDynamoDBTableCustom.${self:provider.stage}}

  ### dev / prod で使い分けるパラメータの設定
  # DynamoDBテーブル名
  diaryStoreDynamoDBTableCustom:
    dev: unknown_diary_dev
    prod: unknown_diary_prod

  ### データストア
  diaryStoreDynamoDBTable: ${self:custom.diaryStoreDynamoDBTableCustom.${self:provider.stage}}
  diaryStoreDynamoDBARN: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.diaryStoreDynamoDBTable}'

  webContentsBucketCustom:
    dev: dev.unknown-diary.com
    prod: prod.unknown-diary.com

  webContentsBucket: ${self:custom.webContentsBucketCustom.${self:provider.stage}}

functions:
  - ${file(./resources/receiver.yml)}
  - ${file(./resources/getter.yml)}
  - ${file(./resources/getter-my-diaries.yml)}
  - ${file(./resources/reaction-diary.yml)}

resources:
  - ${file(./resources/dynamodb.yml)}
  - ${file(./resources/s3.yml)}
  - ${file(./resources/cloudfront.yml)}
  - ${file(./resources/cognito.yml)}
  - ${file(./resources/apigateway-authorizer.yml)}
  - ${file(./resources/route53.yml)}
